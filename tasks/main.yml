---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  ansible.builtin.include_vars: "../vars/main.yml"

- name: include release specific variables
  ansible.builtin.include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true

- name: include release specific tasks
  ansible.builtin.include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

- name: base64 encode
  ansible.builtin.shell: |
    set -euxo pipefail
    tar zcfP - {{ _params | join(' ') }} | base64 -w 0
  vars:
    _params:
      - "/etc/kubernetes/admin.conf"
  args:
    executable: "/bin/bash"
  delegate_to: "{{ groups['kube_master'][0] }}"
  register: base64_encode_result
  changed_when: base64_encode_result is not succeeded

- name: base64 decode
  ansible.builtin.shell: |
    set -euxo pipefail
    echo -n {{ base64_encode_result.stdout | quote }} | base64 -d | tar zx -C /
  args:
    executable: "/bin/bash"
  register: base64_decode_result
  changed_when: base64_decode_result is not succeeded
  tags: kube_node

- name: kubeadm token create
  ansible.builtin.shell: |
    set -euxo pipefail
    kubeadm token create
  args:
    executable: "/bin/bash"
  delegate_to: "{{ groups['kube_master'][0] }}"
  register: kube_kubeadm_token_result
  until: kube_kubeadm_token_result is succeeded
  changed_when: kube_kubeadm_token_result is not succeeded
  failed_when: false

- name: prepare directories
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/kubernetes" }

- name: copy templates
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  vars:
    kube_kubeadm_token: "{{ kube_kubeadm_token_result.stdout }}"
  loop:
    - { dest: "/etc/kubernetes/kubeadm.conf" }
  register: result
  changed_when: result is not succeeded
  notify:
    - kube_node | systemctl restart kubelet.service

- name: prepare files
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/kubernetes/kubeadm.conf" }
  notify:
    - kube_node | systemctl restart kubelet.service

- name: systemctl start kubelet.service
  ansible.builtin.service:
    name: "kubelet.service"
    state: "started"
    enabled: true
  changed_when: false
  failed_when: false

- name: kubeadm join
  ansible.builtin.shell: |
    set -euxo pipefail
    kubeadm join \
      --config=/etc/kubernetes/kubeadm.conf \
      --ignore-preflight-errors=all
  args:
    executable: "/bin/bash"
  register: result
  changed_when: false
  failed_when: false

- name: kubeadm upgrade node
  ansible.builtin.shell: |
    set -euxo pipefail
    kubeadm upgrade node \
      --force \
      --ignore-preflight-errors=all
  args:
    executable: "/bin/bash"
  register: result
  changed_when: false
  failed_when: false

- name: flush handlers
  ansible.builtin.meta: flush_handlers
